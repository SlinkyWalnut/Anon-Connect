{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sebas\\\\OneDrive\\\\Documents\\\\HackPrinceton\\\\Anon-Connect\\\\anon-connect\\\\src\\\\component\\\\EventDisplay\\\\EventMap.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Loader } from '@googlemaps/js-api-loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventMap = ({\n  eventsList\n}) => {\n  _s();\n  const [map, setMap] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false); // State to check if map is loaded\n\n  useEffect(() => {\n    // Prevent loading the API more than once\n    if (isLoaded) return;\n    const loader = new Loader({\n      apiKey: 'AIzaSyAI9qIEtiKAunSO0KOX7TNvKUdQOAyHxd8',\n      // Replace with your valid API Key\n      version: 'weekly',\n      libraries: ['maps', 'marker'] // Specify libraries once\n    });\n    loader.load().then(async () => {\n      // Once the Google Maps API is loaded\n      const {\n        Map,\n        Marker\n      } = await google.maps.importLibrary('maps');\n\n      // Initialize map\n      const mapInstance = new Map(document.getElementById('map'), {\n        center: {\n          lat: 40.7128,\n          lng: -74.0060\n        },\n        zoom: 10\n      });\n      setMap(mapInstance);\n\n      // Create LatLngBounds object to adjust bounds dynamically\n      const bounds = new google.maps.LatLngBounds();\n      eventsList.forEach(event => {\n        const marker = new Marker({\n          position: event.coordinates,\n          map: mapInstance,\n          title: event.name\n        });\n        bounds.extend(event.coordinates);\n      });\n      mapInstance.fitBounds(bounds);\n      setIsLoaded(true); // Mark map as loaded\n    }).catch(error => {\n      console.error('Google Maps API error', error);\n    });\n    return () => {\n      setIsLoaded(false); // Cleanup when component unmounts\n    };\n  }, [eventsList, isLoaded]); // Rerun when eventsList changes\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-container\",\n    style: {\n      height: '400px',\n      width: '100%'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"map\",\n      style: {\n        height: '100%',\n        width: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(EventMap, \"CZWht4lt3werefjcowfaeAC2GfU=\");\n_c = EventMap;\nexport default EventMap;\nvar _c;\n$RefreshReg$(_c, \"EventMap\");","map":{"version":3,"names":["React","useEffect","useState","Loader","jsxDEV","_jsxDEV","EventMap","eventsList","_s","map","setMap","isLoaded","setIsLoaded","loader","apiKey","version","libraries","load","then","Map","Marker","google","maps","importLibrary","mapInstance","document","getElementById","center","lat","lng","zoom","bounds","LatLngBounds","forEach","event","marker","position","coordinates","title","name","extend","fitBounds","catch","error","console","className","style","height","width","children","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Sebas/OneDrive/Documents/HackPrinceton/Anon-Connect/anon-connect/src/component/EventDisplay/EventMap.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Loader } from '@googlemaps/js-api-loader';\r\n\r\nconst EventMap = ({ eventsList }) => {\r\n  const [map, setMap] = useState(null);\r\n  const [isLoaded, setIsLoaded] = useState(false); // State to check if map is loaded\r\n\r\n  useEffect(() => {\r\n    // Prevent loading the API more than once\r\n    if (isLoaded) return;\r\n\r\n    const loader = new Loader({\r\n      apiKey: 'AIzaSyAI9qIEtiKAunSO0KOX7TNvKUdQOAyHxd8', // Replace with your valid API Key\r\n      version: 'weekly',\r\n      libraries: ['maps', 'marker'], // Specify libraries once\r\n    });\r\n\r\n    loader.load().then(async () => {\r\n      // Once the Google Maps API is loaded\r\n      const { Map, Marker } = await google.maps.importLibrary('maps');\r\n\r\n      // Initialize map\r\n      const mapInstance = new Map(document.getElementById('map'), {\r\n        center: { lat: 40.7128, lng: -74.0060 },\r\n        zoom: 10,\r\n      });\r\n      setMap(mapInstance);\r\n\r\n      // Create LatLngBounds object to adjust bounds dynamically\r\n      const bounds = new google.maps.LatLngBounds();\r\n\r\n      eventsList.forEach((event) => {\r\n        const marker = new Marker({\r\n          position: event.coordinates,\r\n          map: mapInstance,\r\n          title: event.name,\r\n        });\r\n        bounds.extend(event.coordinates);\r\n      });\r\n\r\n      mapInstance.fitBounds(bounds);\r\n      setIsLoaded(true); // Mark map as loaded\r\n    }).catch((error) => {\r\n      console.error('Google Maps API error', error);\r\n    });\r\n\r\n    return () => {\r\n      setIsLoaded(false); // Cleanup when component unmounts\r\n    };\r\n  }, [eventsList, isLoaded]); // Rerun when eventsList changes\r\n\r\n  return (\r\n    <div className=\"map-container\" style={{ height: '400px', width: '100%' }}>\r\n      <div id=\"map\" style={{ height: '100%', width: '100%' }} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EventMap;\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,MAAM,QAAQ,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EACnC,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACpC,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAEjDD,SAAS,CAAC,MAAM;IACd;IACA,IAAIU,QAAQ,EAAE;IAEd,MAAME,MAAM,GAAG,IAAIV,MAAM,CAAC;MACxBW,MAAM,EAAE,yCAAyC;MAAE;MACnDC,OAAO,EAAE,QAAQ;MACjBC,SAAS,EAAE,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAE;IACjC,CAAC,CAAC;IAEFH,MAAM,CAACI,IAAI,CAAC,CAAC,CAACC,IAAI,CAAC,YAAY;MAC7B;MACA,MAAM;QAAEC,GAAG;QAAEC;MAAO,CAAC,GAAG,MAAMC,MAAM,CAACC,IAAI,CAACC,aAAa,CAAC,MAAM,CAAC;;MAE/D;MACA,MAAMC,WAAW,GAAG,IAAIL,GAAG,CAACM,QAAQ,CAACC,cAAc,CAAC,KAAK,CAAC,EAAE;QAC1DC,MAAM,EAAE;UAAEC,GAAG,EAAE,OAAO;UAAEC,GAAG,EAAE,CAAC;QAAQ,CAAC;QACvCC,IAAI,EAAE;MACR,CAAC,CAAC;MACFpB,MAAM,CAACc,WAAW,CAAC;;MAEnB;MACA,MAAMO,MAAM,GAAG,IAAIV,MAAM,CAACC,IAAI,CAACU,YAAY,CAAC,CAAC;MAE7CzB,UAAU,CAAC0B,OAAO,CAAEC,KAAK,IAAK;QAC5B,MAAMC,MAAM,GAAG,IAAIf,MAAM,CAAC;UACxBgB,QAAQ,EAAEF,KAAK,CAACG,WAAW;UAC3B5B,GAAG,EAAEe,WAAW;UAChBc,KAAK,EAAEJ,KAAK,CAACK;QACf,CAAC,CAAC;QACFR,MAAM,CAACS,MAAM,CAACN,KAAK,CAACG,WAAW,CAAC;MAClC,CAAC,CAAC;MAEFb,WAAW,CAACiB,SAAS,CAACV,MAAM,CAAC;MAC7BnB,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC;IACrB,CAAC,CAAC,CAAC8B,KAAK,CAAEC,KAAK,IAAK;MAClBC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C,CAAC,CAAC;IAEF,OAAO,MAAM;MACX/B,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;IACtB,CAAC;EACH,CAAC,EAAE,CAACL,UAAU,EAAEI,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAE5B,oBACEN,OAAA;IAAKwC,SAAS,EAAC,eAAe;IAACC,KAAK,EAAE;MAAEC,MAAM,EAAE,OAAO;MAAEC,KAAK,EAAE;IAAO,CAAE;IAAAC,QAAA,eACvE5C,OAAA;MAAK6C,EAAE,EAAC,KAAK;MAACJ,KAAK,EAAE;QAAEC,MAAM,EAAE,MAAM;QAAEC,KAAK,EAAE;MAAO;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvD,CAAC;AAEV,CAAC;AAAC9C,EAAA,CArDIF,QAAQ;AAAAiD,EAAA,GAARjD,QAAQ;AAuDd,eAAeA,QAAQ;AAAC,IAAAiD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}