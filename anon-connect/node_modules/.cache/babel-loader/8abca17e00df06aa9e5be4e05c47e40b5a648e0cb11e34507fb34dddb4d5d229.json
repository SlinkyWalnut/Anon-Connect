{"ast":null,"code":"'use strict';\n\nconst isDefiningProjection = require('./isDefiningProjection');\nconst isPOJO = require('../isPOJO');\n\n/*!\n * ignore\n */\n\nmodule.exports = function isExclusive(projection) {\n  if (projection == null) {\n    return null;\n  }\n  const keys = Object.keys(projection);\n  let exclude = null;\n  if (keys.length === 1 && keys[0] === '_id') {\n    exclude = !projection._id;\n  } else {\n    for (let ki = 0; ki < keys.length; ++ki) {\n      // Does this projection explicitly define inclusion/exclusion?\n      // Explicitly avoid `$meta` and `$slice`\n      const key = keys[ki];\n      if (key !== '_id' && isDefiningProjection(projection[key])) {\n        exclude = isPOJO(projection[key]) ? isExclusive(projection[key]) ?? exclude : !projection[key];\n        if (exclude != null) {\n          break;\n        }\n      }\n    }\n  }\n  return exclude;\n};","map":{"version":3,"names":["isDefiningProjection","require","isPOJO","module","exports","isExclusive","projection","keys","Object","exclude","length","_id","ki","key"],"sources":["C:/Users/wliu6/OneDrive/Desktop/Web Development/we-detox/Anon-Connect/anon-connect/node_modules/mongoose/lib/helpers/projection/isExclusive.js"],"sourcesContent":["'use strict';\n\nconst isDefiningProjection = require('./isDefiningProjection');\nconst isPOJO = require('../isPOJO');\n\n/*!\n * ignore\n */\n\nmodule.exports = function isExclusive(projection) {\n  if (projection == null) {\n    return null;\n  }\n\n  const keys = Object.keys(projection);\n  let exclude = null;\n\n  if (keys.length === 1 && keys[0] === '_id') {\n    exclude = !projection._id;\n  } else {\n    for (let ki = 0; ki < keys.length; ++ki) {\n      // Does this projection explicitly define inclusion/exclusion?\n      // Explicitly avoid `$meta` and `$slice`\n      const key = keys[ki];\n      if (key !== '_id' && isDefiningProjection(projection[key])) {\n        exclude = isPOJO(projection[key]) ?\n          (isExclusive(projection[key]) ?? exclude) :\n          !projection[key];\n        if (exclude != null) {\n          break;\n        }\n      }\n    }\n  }\n\n  return exclude;\n};\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,oBAAoB,GAAGC,OAAO,CAAC,wBAAwB,CAAC;AAC9D,MAAMC,MAAM,GAAGD,OAAO,CAAC,WAAW,CAAC;;AAEnC;AACA;AACA;;AAEAE,MAAM,CAACC,OAAO,GAAG,SAASC,WAAWA,CAACC,UAAU,EAAE;EAChD,IAAIA,UAAU,IAAI,IAAI,EAAE;IACtB,OAAO,IAAI;EACb;EAEA,MAAMC,IAAI,GAAGC,MAAM,CAACD,IAAI,CAACD,UAAU,CAAC;EACpC,IAAIG,OAAO,GAAG,IAAI;EAElB,IAAIF,IAAI,CAACG,MAAM,KAAK,CAAC,IAAIH,IAAI,CAAC,CAAC,CAAC,KAAK,KAAK,EAAE;IAC1CE,OAAO,GAAG,CAACH,UAAU,CAACK,GAAG;EAC3B,CAAC,MAAM;IACL,KAAK,IAAIC,EAAE,GAAG,CAAC,EAAEA,EAAE,GAAGL,IAAI,CAACG,MAAM,EAAE,EAAEE,EAAE,EAAE;MACvC;MACA;MACA,MAAMC,GAAG,GAAGN,IAAI,CAACK,EAAE,CAAC;MACpB,IAAIC,GAAG,KAAK,KAAK,IAAIb,oBAAoB,CAACM,UAAU,CAACO,GAAG,CAAC,CAAC,EAAE;QAC1DJ,OAAO,GAAGP,MAAM,CAACI,UAAU,CAACO,GAAG,CAAC,CAAC,GAC9BR,WAAW,CAACC,UAAU,CAACO,GAAG,CAAC,CAAC,IAAIJ,OAAO,GACxC,CAACH,UAAU,CAACO,GAAG,CAAC;QAClB,IAAIJ,OAAO,IAAI,IAAI,EAAE;UACnB;QACF;MACF;IACF;EACF;EAEA,OAAOA,OAAO;AAChB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}