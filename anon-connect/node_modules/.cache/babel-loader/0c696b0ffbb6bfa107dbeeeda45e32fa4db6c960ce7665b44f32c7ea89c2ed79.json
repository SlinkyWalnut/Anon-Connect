{"ast":null,"code":"/*!\n * Module dependencies.\n */\n\n'use strict';\n\nconst MongooseError = require('./mongooseError');\n\n/**\n * InvalidSchemaOption Error constructor.\n * @param {String} name\n * @api private\n */\n\nclass InvalidSchemaOptionError extends MongooseError {\n  constructor(name, option) {\n    const msg = `Cannot create use schema for property \"${name}\" because the schema has the ${option} option enabled.`;\n    super(msg);\n  }\n}\nObject.defineProperty(InvalidSchemaOptionError.prototype, 'name', {\n  value: 'InvalidSchemaOptionError'\n});\n\n/*!\n * exports\n */\n\nmodule.exports = InvalidSchemaOptionError;","map":{"version":3,"names":["MongooseError","require","InvalidSchemaOptionError","constructor","name","option","msg","Object","defineProperty","prototype","value","module","exports"],"sources":["C:/Users/wliu6/OneDrive/Desktop/Web Development/we-detox/Anon-Connect/anon-connect/node_modules/mongoose/lib/error/invalidSchemaOption.js"],"sourcesContent":["\n/*!\n * Module dependencies.\n */\n\n'use strict';\n\nconst MongooseError = require('./mongooseError');\n\n/**\n * InvalidSchemaOption Error constructor.\n * @param {String} name\n * @api private\n */\n\nclass InvalidSchemaOptionError extends MongooseError {\n\n  constructor(name, option) {\n    const msg = `Cannot create use schema for property \"${name}\" because the schema has the ${option} option enabled.`;\n    super(msg);\n  }\n}\n\nObject.defineProperty(InvalidSchemaOptionError.prototype, 'name', {\n  value: 'InvalidSchemaOptionError'\n});\n\n/*!\n * exports\n */\n\nmodule.exports = InvalidSchemaOptionError;\n"],"mappings":"AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAMA,aAAa,GAAGC,OAAO,CAAC,iBAAiB,CAAC;;AAEhD;AACA;AACA;AACA;AACA;;AAEA,MAAMC,wBAAwB,SAASF,aAAa,CAAC;EAEnDG,WAAWA,CAACC,IAAI,EAAEC,MAAM,EAAE;IACxB,MAAMC,GAAG,GAAG,0CAA0CF,IAAI,gCAAgCC,MAAM,kBAAkB;IAClH,KAAK,CAACC,GAAG,CAAC;EACZ;AACF;AAEAC,MAAM,CAACC,cAAc,CAACN,wBAAwB,CAACO,SAAS,EAAE,MAAM,EAAE;EAChEC,KAAK,EAAE;AACT,CAAC,CAAC;;AAEF;AACA;AACA;;AAEAC,MAAM,CAACC,OAAO,GAAGV,wBAAwB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}