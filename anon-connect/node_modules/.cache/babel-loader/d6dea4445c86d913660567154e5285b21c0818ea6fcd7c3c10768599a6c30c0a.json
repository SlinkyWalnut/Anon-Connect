{"ast":null,"code":"'use strict';\n\n/*!\n * Module dependencies.\n */\nconst UUID = require('bson').UUID;\nconst ms = require('ms');\nconst mpath = require('mpath');\nconst ObjectId = require('./types/objectid');\nconst PopulateOptions = require('./options/populateOptions');\nconst clone = require('./helpers/clone');\nconst immediate = require('./helpers/immediate');\nconst isObject = require('./helpers/isObject');\nconst isMongooseArray = require('./types/array/isMongooseArray');\nconst isMongooseDocumentArray = require('./types/documentArray/isMongooseDocumentArray');\nconst isBsonType = require('./helpers/isBsonType');\nconst isPOJO = require('./helpers/isPOJO');\nconst getFunctionName = require('./helpers/getFunctionName');\nconst isMongooseObject = require('./helpers/isMongooseObject');\nconst promiseOrCallback = require('./helpers/promiseOrCallback');\nconst schemaMerge = require('./helpers/schema/merge');\nconst specialProperties = require('./helpers/specialProperties');\nconst {\n  trustedSymbol\n} = require('./helpers/query/trusted');\nlet Document;\nexports.specialProperties = specialProperties;\nexports.isMongooseArray = isMongooseArray.isMongooseArray;\nexports.isMongooseDocumentArray = isMongooseDocumentArray.isMongooseDocumentArray;\nexports.registerMongooseArray = isMongooseArray.registerMongooseArray;\nexports.registerMongooseDocumentArray = isMongooseDocumentArray.registerMongooseDocumentArray;\nconst oneSpaceRE = /\\s/;\nconst manySpaceRE = /\\s+/;\n\n/**\n * Produces a collection name from model `name`. By default, just returns\n * the model name\n *\n * @param {String} name a model name\n * @param {Function} pluralize function that pluralizes the collection name\n * @return {String} a collection name\n * @api private\n */\n\nexports.toCollectionName = function (name, pluralize) {\n  if (name === 'system.profile') {\n    return name;\n  }\n  if (name === 'system.indexes') {\n    return name;\n  }\n  if (typeof pluralize === 'function') {\n    if (typeof name !== 'string') {\n      throw new TypeError('Collection name must be a string');\n    }\n    if (name.length === 0) {\n      throw new TypeError('Collection name cannot be empty');\n    }\n    return pluralize(name);\n  }\n  return name;\n};\n\n/**\n * Determines if `a` and `b` are deep equal.\n *\n * Modified from node/lib/assert.js\n *\n * @param {any} a a value to compare to `b`\n * @param {any} b a value to compare to `a`\n * @return {Boolean}\n * @api private\n */\n\nexports.deepEqual = function deepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (typeof a !== 'object' || typeof b !== 'object') {\n    return a === b;\n  }\n  if (a instanceof Date && b instanceof Date) {\n    return a.getTime() === b.getTime();\n  }\n  if (isBsonType(a, 'ObjectId') && isBsonType(b, 'ObjectId') || isBsonType(a, 'Decimal128') && isBsonType(b, 'Decimal128')) {\n    return a.toString() === b.toString();\n  }\n  if (a instanceof RegExp && b instanceof RegExp) {\n    return a.source === b.source && a.ignoreCase === b.ignoreCase && a.multiline === b.multiline && a.global === b.global && a.dotAll === b.dotAll && a.unicode === b.unicode && a.sticky === b.sticky && a.hasIndices === b.hasIndices;\n  }\n  if (a == null || b == null) {\n    return false;\n  }\n  if (a.prototype !== b.prototype) {\n    return false;\n  }\n  if (a instanceof Map || b instanceof Map) {\n    if (!(a instanceof Map) || !(b instanceof Map)) {\n      return false;\n    }\n    return deepEqual(Array.from(a.keys()), Array.from(b.keys())) && deepEqual(Array.from(a.values()), Array.from(b.values()));\n  }\n\n  // Handle MongooseNumbers\n  if (a instanceof Number && b instanceof Number) {\n    return a.valueOf() === b.valueOf();\n  }\n  if (Buffer.isBuffer(a)) {\n    return exports.buffer.areEqual(a, b);\n  }\n  if (Array.isArray(a) || Array.isArray(b)) {\n    if (!Array.isArray(a) || !Array.isArray(b)) {\n      return false;\n    }\n    const len = a.length;\n    if (len !== b.length) {\n      return false;\n    }\n    for (let i = 0; i < len; ++i) {\n      if (!deepEqual(a[i], b[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  if (a.$__ != null) {\n    a = a._doc;\n  } else if (isMongooseObject(a)) {\n    a = a.toObject();\n  }\n  if (b.$__ != null) {\n    b = b._doc;\n  } else if (isMongooseObject(b)) {\n    b = b.toObject();\n  }\n  const ka = Object.keys(a);\n  const kb = Object.keys(b);\n  const kaLength = ka.length;\n\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (kaLength !== kb.length) {\n    return false;\n  }\n\n  // ~~~cheap key test\n  for (let i = kaLength - 1; i >= 0; i--) {\n    if (ka[i] !== kb[i]) {\n      return false;\n    }\n  }\n\n  // equivalent values for every corresponding key, and\n  // ~~~possibly expensive deep test\n  for (const key of ka) {\n    if (!deepEqual(a[key], b[key])) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * Get the last element of an array\n * @param {Array} arr\n */\n\nexports.last = function (arr) {\n  if (arr.length > 0) {\n    return arr[arr.length - 1];\n  }\n  return void 0;\n};\n\n/*!\n * ignore\n */\n\nexports.promiseOrCallback = promiseOrCallback;\n\n/*!\n * ignore\n */\n\nexports.cloneArrays = function cloneArrays(arr) {\n  if (!Array.isArray(arr)) {\n    return arr;\n  }\n  return arr.map(el => exports.cloneArrays(el));\n};\n\n/*!\n * ignore\n */\n\nexports.omit = function omit(obj, keys) {\n  if (keys == null) {\n    return Object.assign({}, obj);\n  }\n  if (!Array.isArray(keys)) {\n    keys = [keys];\n  }\n  const ret = Object.assign({}, obj);\n  for (const key of keys) {\n    delete ret[key];\n  }\n  return ret;\n};\n\n/**\n * Merges `from` into `to` without overwriting existing properties.\n *\n * @param {Object} to\n * @param {Object} from\n * @param {Object} [options]\n * @param {String} [path]\n * @api private\n */\n\nexports.merge = function merge(to, from, options, path) {\n  options = options || {};\n  const keys = Object.keys(from);\n  let i = 0;\n  const len = keys.length;\n  let key;\n  if (from[trustedSymbol]) {\n    to[trustedSymbol] = from[trustedSymbol];\n  }\n  path = path || '';\n  const omitNested = options.omitNested || {};\n  while (i < len) {\n    key = keys[i++];\n    if (options.omit && options.omit[key]) {\n      continue;\n    }\n    if (omitNested[path]) {\n      continue;\n    }\n    if (specialProperties.has(key)) {\n      continue;\n    }\n    if (to[key] == null) {\n      if (isPOJO(from[key])) {\n        to[key] = {\n          ...from[key]\n        };\n      } else if (Array.isArray(from[key])) {\n        to[key] = [...from[key]];\n      } else {\n        to[key] = from[key];\n      }\n    } else if (exports.isObject(from[key])) {\n      if (!exports.isObject(to[key])) {\n        to[key] = {};\n      }\n      if (from[key] != null) {\n        // Skip merging schemas if we're creating a discriminator schema and\n        // base schema has a given path as a single nested but discriminator schema\n        // has the path as a document array, or vice versa (gh-9534)\n        if (options.isDiscriminatorSchemaMerge && from[key].$isSingleNested && to[key].$isMongooseDocumentArray || from[key].$isMongooseDocumentArray && to[key].$isSingleNested) {\n          continue;\n        } else if (from[key].instanceOfSchema) {\n          if (to[key].instanceOfSchema) {\n            schemaMerge(to[key], from[key].clone(), options.isDiscriminatorSchemaMerge);\n          } else {\n            to[key] = from[key].clone();\n          }\n          continue;\n        } else if (isBsonType(from[key], 'ObjectId')) {\n          to[key] = new ObjectId(from[key]);\n          continue;\n        }\n      }\n      merge(to[key], from[key], options, path ? path + '.' + key : key);\n    } else if (options.overwrite) {\n      to[key] = from[key];\n    }\n  }\n  return to;\n};\n\n/**\n * Applies toObject recursively.\n *\n * @param {Document|Array|Object} obj\n * @return {Object}\n * @api private\n */\n\nexports.toObject = function toObject(obj) {\n  Document || (Document = require('./document'));\n  let ret;\n  if (obj == null) {\n    return obj;\n  }\n  if (obj instanceof Document) {\n    return obj.toObject();\n  }\n  if (Array.isArray(obj)) {\n    ret = [];\n    for (const doc of obj) {\n      ret.push(toObject(doc));\n    }\n    return ret;\n  }\n  if (exports.isPOJO(obj)) {\n    ret = {};\n    if (obj[trustedSymbol]) {\n      ret[trustedSymbol] = obj[trustedSymbol];\n    }\n    for (const k of Object.keys(obj)) {\n      if (specialProperties.has(k)) {\n        continue;\n      }\n      ret[k] = toObject(obj[k]);\n    }\n    return ret;\n  }\n  return obj;\n};\nexports.isObject = isObject;\n\n/**\n * Determines if `arg` is a plain old JavaScript object (POJO). Specifically,\n * `arg` must be an object but not an instance of any special class, like String,\n * ObjectId, etc.\n *\n * `Object.getPrototypeOf()` is part of ES5: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/getPrototypeOf\n *\n * @param {Object|Array|String|Function|RegExp|any} arg\n * @api private\n * @return {Boolean}\n */\n\nexports.isPOJO = require('./helpers/isPOJO');\n\n/**\n * Determines if `arg` is an object that isn't an instance of a built-in value\n * class, like Array, Buffer, ObjectId, etc.\n * @param {Any} val\n */\n\nexports.isNonBuiltinObject = function isNonBuiltinObject(val) {\n  return typeof val === 'object' && !exports.isNativeObject(val) && !exports.isMongooseType(val) && !(val instanceof UUID) && val != null;\n};\n\n/**\n * Determines if `obj` is a built-in object like an array, date, boolean,\n * etc.\n * @param {Any} arg\n */\n\nexports.isNativeObject = function (arg) {\n  return Array.isArray(arg) || arg instanceof Date || arg instanceof Boolean || arg instanceof Number || arg instanceof String;\n};\n\n/**\n * Determines if `val` is an object that has no own keys\n * @param {Any} val\n */\n\nexports.isEmptyObject = function (val) {\n  return val != null && typeof val === 'object' && Object.keys(val).length === 0;\n};\n\n/**\n * Search if `obj` or any POJOs nested underneath `obj` has a property named\n * `key`\n * @param {Object} obj\n * @param {String} key\n */\n\nexports.hasKey = function hasKey(obj, key) {\n  const props = Object.keys(obj);\n  for (const prop of props) {\n    if (prop === key) {\n      return true;\n    }\n    if (exports.isPOJO(obj[prop]) && exports.hasKey(obj[prop], key)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * process.nextTick helper.\n *\n * Wraps `callback` in a try/catch + nextTick.\n *\n * node-mongodb-native has a habit of state corruption when an error is immediately thrown from within a collection callback.\n *\n * @param {Function} callback\n * @api private\n */\n\nexports.tick = function tick(callback) {\n  if (typeof callback !== 'function') {\n    return;\n  }\n  return function () {\n    try {\n      callback.apply(this, arguments);\n    } catch (err) {\n      // only nextTick on err to get out of\n      // the event loop and avoid state corruption.\n      immediate(function () {\n        throw err;\n      });\n    }\n  };\n};\n\n/**\n * Returns true if `v` is an object that can be serialized as a primitive in\n * MongoDB\n * @param {Any} v\n */\n\nexports.isMongooseType = function (v) {\n  return isBsonType(v, 'ObjectId') || isBsonType(v, 'Decimal128') || v instanceof Buffer;\n};\nexports.isMongooseObject = isMongooseObject;\n\n/**\n * Converts `expires` options of index objects to `expiresAfterSeconds` options for MongoDB.\n *\n * @param {Object} object\n * @api private\n */\n\nexports.expires = function expires(object) {\n  if (!(object && object.constructor.name === 'Object')) {\n    return;\n  }\n  if (!('expires' in object)) {\n    return;\n  }\n  object.expireAfterSeconds = typeof object.expires !== 'string' ? object.expires : Math.round(ms(object.expires) / 1000);\n  delete object.expires;\n};\n\n/**\n * populate helper\n * @param {String} path\n * @param {String} select\n * @param {Model} model\n * @param {Object} match\n * @param {Object} options\n * @param {Any} subPopulate\n * @param {Boolean} justOne\n * @param {Boolean} count\n */\n\nexports.populate = function populate(path, select, model, match, options, subPopulate, justOne, count) {\n  // might have passed an object specifying all arguments\n  let obj = null;\n  if (arguments.length === 1) {\n    if (path instanceof PopulateOptions) {\n      // If reusing old populate docs, avoid reusing `_docs` because that may\n      // lead to bugs and memory leaks. See gh-11641\n      path._docs = {};\n      path._childDocs = [];\n      return [path];\n    }\n    if (Array.isArray(path)) {\n      const singles = makeSingles(path);\n      return singles.map(o => exports.populate(o)[0]);\n    }\n    if (exports.isObject(path)) {\n      obj = Object.assign({}, path);\n    } else {\n      obj = {\n        path: path\n      };\n    }\n  } else if (typeof model === 'object') {\n    obj = {\n      path: path,\n      select: select,\n      match: model,\n      options: match\n    };\n  } else {\n    obj = {\n      path: path,\n      select: select,\n      model: model,\n      match: match,\n      options: options,\n      populate: subPopulate,\n      justOne: justOne,\n      count: count\n    };\n  }\n  if (typeof obj.path !== 'string') {\n    throw new TypeError('utils.populate: invalid path. Expected string. Got typeof `' + typeof path + '`');\n  }\n  return _populateObj(obj);\n\n  // The order of select/conditions args is opposite Model.find but\n  // necessary to keep backward compatibility (select could be\n  // an array, string, or object literal).\n  function makeSingles(arr) {\n    const ret = [];\n    arr.forEach(function (obj) {\n      if (oneSpaceRE.test(obj.path)) {\n        const paths = obj.path.split(manySpaceRE);\n        paths.forEach(function (p) {\n          const copy = Object.assign({}, obj);\n          copy.path = p;\n          ret.push(copy);\n        });\n      } else {\n        ret.push(obj);\n      }\n    });\n    return ret;\n  }\n};\nfunction _populateObj(obj) {\n  if (Array.isArray(obj.populate)) {\n    const ret = [];\n    obj.populate.forEach(function (obj) {\n      if (oneSpaceRE.test(obj.path)) {\n        const copy = Object.assign({}, obj);\n        const paths = copy.path.split(manySpaceRE);\n        paths.forEach(function (p) {\n          copy.path = p;\n          ret.push(exports.populate(copy)[0]);\n        });\n      } else {\n        ret.push(exports.populate(obj)[0]);\n      }\n    });\n    obj.populate = exports.populate(ret);\n  } else if (obj.populate != null && typeof obj.populate === 'object') {\n    obj.populate = exports.populate(obj.populate);\n  }\n  const ret = [];\n  const paths = oneSpaceRE.test(obj.path) ? obj.path.split(manySpaceRE) : [obj.path];\n  if (obj.options != null) {\n    obj.options = clone(obj.options);\n  }\n  for (const path of paths) {\n    ret.push(new PopulateOptions(Object.assign({}, obj, {\n      path: path\n    })));\n  }\n  return ret;\n}\n\n/**\n * Return the value of `obj` at the given `path`.\n *\n * @param {String} path\n * @param {Object} obj\n * @param {Any} map\n */\n\nexports.getValue = function (path, obj, map) {\n  return mpath.get(path, obj, getValueLookup, map);\n};\n\n/*!\n * ignore\n */\n\nconst mapGetterOptions = Object.freeze({\n  getters: false\n});\nfunction getValueLookup(obj, part) {\n  let _from = obj?._doc || obj;\n  if (_from != null && _from.isMongooseArrayProxy) {\n    _from = _from.__array;\n  }\n  return _from instanceof Map ? _from.get(part, mapGetterOptions) : _from[part];\n}\n\n/**\n * Sets the value of `obj` at the given `path`.\n *\n * @param {String} path\n * @param {Anything} val\n * @param {Object} obj\n * @param {Any} map\n * @param {Any} _copying\n */\n\nexports.setValue = function (path, val, obj, map, _copying) {\n  mpath.set(path, val, obj, '_doc', map, _copying);\n};\n\n/**\n * Returns an array of values from object `o`.\n *\n * @param {Object} o\n * @return {Array}\n * @api private\n */\n\nexports.object = {};\nexports.object.vals = function vals(o) {\n  const keys = Object.keys(o);\n  let i = keys.length;\n  const ret = [];\n  while (i--) {\n    ret.push(o[keys[i]]);\n  }\n  return ret;\n};\nconst hop = Object.prototype.hasOwnProperty;\n\n/**\n * Safer helper for hasOwnProperty checks\n *\n * @param {Object} obj\n * @param {String} prop\n */\n\nexports.object.hasOwnProperty = function (obj, prop) {\n  return hop.call(obj, prop);\n};\n\n/**\n * Determine if `val` is null or undefined\n *\n * @param {Any} val\n * @return {Boolean}\n */\n\nexports.isNullOrUndefined = function (val) {\n  return val === null || val === undefined;\n};\n\n/*!\n * ignore\n */\n\nexports.array = {};\n\n/**\n * Flattens an array.\n *\n * [ 1, [ 2, 3, [4] ]] -> [1,2,3,4]\n *\n * @param {Array} arr\n * @param {Function} [filter] If passed, will be invoked with each item in the array. If `filter` returns a falsy value, the item will not be included in the results.\n * @param {Array} ret\n * @return {Array}\n * @api private\n */\n\nexports.array.flatten = function flatten(arr, filter, ret) {\n  ret || (ret = []);\n  arr.forEach(function (item) {\n    if (Array.isArray(item)) {\n      flatten(item, filter, ret);\n    } else {\n      if (!filter || filter(item)) {\n        ret.push(item);\n      }\n    }\n  });\n  return ret;\n};\n\n/*!\n * ignore\n */\n\nconst _hasOwnProperty = Object.prototype.hasOwnProperty;\nexports.hasUserDefinedProperty = function (obj, key) {\n  if (obj == null) {\n    return false;\n  }\n  if (Array.isArray(key)) {\n    for (const k of key) {\n      if (exports.hasUserDefinedProperty(obj, k)) {\n        return true;\n      }\n    }\n    return false;\n  }\n  if (_hasOwnProperty.call(obj, key)) {\n    return true;\n  }\n  if (typeof obj === 'object' && key in obj) {\n    const v = obj[key];\n    return v !== Object.prototype[key] && v !== Array.prototype[key];\n  }\n  return false;\n};\n\n/*!\n * ignore\n */\n\nconst MAX_ARRAY_INDEX = Math.pow(2, 32) - 1;\nexports.isArrayIndex = function (val) {\n  if (typeof val === 'number') {\n    return val >= 0 && val <= MAX_ARRAY_INDEX;\n  }\n  if (typeof val === 'string') {\n    if (!/^\\d+$/.test(val)) {\n      return false;\n    }\n    val = +val;\n    return val >= 0 && val <= MAX_ARRAY_INDEX;\n  }\n  return false;\n};\n\n/**\n * Removes duplicate values from an array\n *\n * [1, 2, 3, 3, 5] => [1, 2, 3, 5]\n * [ ObjectId(\"550988ba0c19d57f697dc45e\"), ObjectId(\"550988ba0c19d57f697dc45e\") ]\n *    => [ObjectId(\"550988ba0c19d57f697dc45e\")]\n *\n * @param {Array} arr\n * @return {Array}\n * @api private\n */\n\nexports.array.unique = function (arr) {\n  const primitives = new Set();\n  const ids = new Set();\n  const ret = [];\n  for (const item of arr) {\n    if (typeof item === 'number' || typeof item === 'string' || item == null) {\n      if (primitives.has(item)) {\n        continue;\n      }\n      ret.push(item);\n      primitives.add(item);\n    } else if (isBsonType(item, 'ObjectId')) {\n      if (ids.has(item.toString())) {\n        continue;\n      }\n      ret.push(item);\n      ids.add(item.toString());\n    } else {\n      ret.push(item);\n    }\n  }\n  return ret;\n};\nexports.buffer = {};\n\n/**\n * Determines if two buffers are equal.\n *\n * @param {Buffer} a\n * @param {Object} b\n */\n\nexports.buffer.areEqual = function (a, b) {\n  if (!Buffer.isBuffer(a)) {\n    return false;\n  }\n  if (!Buffer.isBuffer(b)) {\n    return false;\n  }\n  if (a.length !== b.length) {\n    return false;\n  }\n  for (let i = 0, len = a.length; i < len; ++i) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n  return true;\n};\nexports.getFunctionName = getFunctionName;\n\n/**\n * Decorate buffers\n * @param {Object} destination\n * @param {Object} source\n */\n\nexports.decorate = function (destination, source) {\n  for (const key in source) {\n    if (specialProperties.has(key)) {\n      continue;\n    }\n    destination[key] = source[key];\n  }\n};\n\n/**\n * merges to with a copy of from\n *\n * @param {Object} to\n * @param {Object} fromObj\n * @api private\n */\n\nexports.mergeClone = function (to, fromObj) {\n  if (isMongooseObject(fromObj)) {\n    fromObj = fromObj.toObject({\n      transform: false,\n      virtuals: false,\n      depopulate: true,\n      getters: false,\n      flattenDecimals: false\n    });\n  }\n  const keys = Object.keys(fromObj);\n  const len = keys.length;\n  let i = 0;\n  let key;\n  while (i < len) {\n    key = keys[i++];\n    if (specialProperties.has(key)) {\n      continue;\n    }\n    if (typeof to[key] === 'undefined') {\n      to[key] = clone(fromObj[key], {\n        transform: false,\n        virtuals: false,\n        depopulate: true,\n        getters: false,\n        flattenDecimals: false\n      });\n    } else {\n      let val = fromObj[key];\n      if (val != null && val.valueOf && !(val instanceof Date)) {\n        val = val.valueOf();\n      }\n      if (exports.isObject(val)) {\n        let obj = val;\n        if (isMongooseObject(val) && !val.isMongooseBuffer) {\n          obj = obj.toObject({\n            transform: false,\n            virtuals: false,\n            depopulate: true,\n            getters: false,\n            flattenDecimals: false\n          });\n        }\n        if (val.isMongooseBuffer) {\n          obj = Buffer.from(obj);\n        }\n        exports.mergeClone(to[key], obj);\n      } else {\n        to[key] = clone(val, {\n          flattenDecimals: false\n        });\n      }\n    }\n  }\n};\n\n/**\n * Executes a function on each element of an array (like _.each)\n *\n * @param {Array} arr\n * @param {Function} fn\n * @api private\n */\n\nexports.each = function (arr, fn) {\n  for (const item of arr) {\n    fn(item);\n  }\n};\n\n/**\n * Rename an object key, while preserving its position in the object\n *\n * @param {Object} oldObj\n * @param {String|Number} oldKey\n * @param {String|Number} newKey\n * @api private\n */\nexports.renameObjKey = function (oldObj, oldKey, newKey) {\n  const keys = Object.keys(oldObj);\n  return keys.reduce((acc, val) => {\n    if (val === oldKey) {\n      acc[newKey] = oldObj[oldKey];\n    } else {\n      acc[val] = oldObj[val];\n    }\n    return acc;\n  }, {});\n};\n\n/*!\n * ignore\n */\n\nexports.getOption = function (name) {\n  const sources = Array.prototype.slice.call(arguments, 1);\n  for (const source of sources) {\n    if (source == null) {\n      continue;\n    }\n    if (source[name] != null) {\n      return source[name];\n    }\n  }\n  return null;\n};\n\n/*!\n * ignore\n */\n\nexports.noop = function () {};\nexports.errorToPOJO = function errorToPOJO(error) {\n  const isError = error instanceof Error;\n  if (!isError) {\n    throw new Error('`error` must be `instanceof Error`.');\n  }\n  const ret = {};\n  for (const properyName of Object.getOwnPropertyNames(error)) {\n    ret[properyName] = error[properyName];\n  }\n  return ret;\n};\n\n/*!\n * ignore\n */\n\nexports.warn = function warn(message) {\n  return process.emitWarning(message, {\n    code: 'MONGOOSE'\n  });\n};\nexports.injectTimestampsOption = function injectTimestampsOption(writeOperation, timestampsOption) {\n  if (timestampsOption == null) {\n    return;\n  }\n  writeOperation.timestamps = timestampsOption;\n};","map":{"version":3,"names":["UUID","require","ms","mpath","ObjectId","PopulateOptions","clone","immediate","isObject","isMongooseArray","isMongooseDocumentArray","isBsonType","isPOJO","getFunctionName","isMongooseObject","promiseOrCallback","schemaMerge","specialProperties","trustedSymbol","Document","exports","registerMongooseArray","registerMongooseDocumentArray","oneSpaceRE","manySpaceRE","toCollectionName","name","pluralize","TypeError","length","deepEqual","a","b","Date","getTime","toString","RegExp","source","ignoreCase","multiline","global","dotAll","unicode","sticky","hasIndices","prototype","Map","Array","from","keys","values","Number","valueOf","Buffer","isBuffer","buffer","areEqual","isArray","len","i","$__","_doc","toObject","ka","Object","kb","kaLength","key","last","arr","cloneArrays","map","el","omit","obj","assign","ret","merge","to","options","path","omitNested","has","isDiscriminatorSchemaMerge","$isSingleNested","$isMongooseDocumentArray","instanceOfSchema","overwrite","doc","push","k","isNonBuiltinObject","val","isNativeObject","isMongooseType","arg","Boolean","String","isEmptyObject","hasKey","props","prop","tick","callback","apply","arguments","err","v","expires","object","constructor","expireAfterSeconds","Math","round","populate","select","model","match","subPopulate","justOne","count","_docs","_childDocs","singles","makeSingles","o","_populateObj","forEach","test","paths","split","p","copy","getValue","get","getValueLookup","mapGetterOptions","freeze","getters","part","_from","isMongooseArrayProxy","__array","setValue","_copying","set","vals","hop","hasOwnProperty","call","isNullOrUndefined","undefined","array","flatten","filter","item","_hasOwnProperty","hasUserDefinedProperty","MAX_ARRAY_INDEX","pow","isArrayIndex","unique","primitives","Set","ids","add","decorate","destination","mergeClone","fromObj","transform","virtuals","depopulate","flattenDecimals","isMongooseBuffer","each","fn","renameObjKey","oldObj","oldKey","newKey","reduce","acc","getOption","sources","slice","noop","errorToPOJO","error","isError","Error","properyName","getOwnPropertyNames","warn","message","process","emitWarning","code","injectTimestampsOption","writeOperation","timestampsOption","timestamps"],"sources":["C:/Users/wliu6/OneDrive/Desktop/Web Development/we-detox/Anon-Connect/anon-connect/node_modules/mongoose/lib/utils.js"],"sourcesContent":["'use strict';\n\n/*!\n * Module dependencies.\n */\n\nconst UUID = require('bson').UUID;\nconst ms = require('ms');\nconst mpath = require('mpath');\nconst ObjectId = require('./types/objectid');\nconst PopulateOptions = require('./options/populateOptions');\nconst clone = require('./helpers/clone');\nconst immediate = require('./helpers/immediate');\nconst isObject = require('./helpers/isObject');\nconst isMongooseArray = require('./types/array/isMongooseArray');\nconst isMongooseDocumentArray = require('./types/documentArray/isMongooseDocumentArray');\nconst isBsonType = require('./helpers/isBsonType');\nconst isPOJO = require('./helpers/isPOJO');\nconst getFunctionName = require('./helpers/getFunctionName');\nconst isMongooseObject = require('./helpers/isMongooseObject');\nconst promiseOrCallback = require('./helpers/promiseOrCallback');\nconst schemaMerge = require('./helpers/schema/merge');\nconst specialProperties = require('./helpers/specialProperties');\nconst { trustedSymbol } = require('./helpers/query/trusted');\n\nlet Document;\n\nexports.specialProperties = specialProperties;\n\nexports.isMongooseArray = isMongooseArray.isMongooseArray;\nexports.isMongooseDocumentArray = isMongooseDocumentArray.isMongooseDocumentArray;\nexports.registerMongooseArray = isMongooseArray.registerMongooseArray;\nexports.registerMongooseDocumentArray = isMongooseDocumentArray.registerMongooseDocumentArray;\n\nconst oneSpaceRE = /\\s/;\nconst manySpaceRE = /\\s+/;\n\n/**\n * Produces a collection name from model `name`. By default, just returns\n * the model name\n *\n * @param {String} name a model name\n * @param {Function} pluralize function that pluralizes the collection name\n * @return {String} a collection name\n * @api private\n */\n\nexports.toCollectionName = function(name, pluralize) {\n  if (name === 'system.profile') {\n    return name;\n  }\n  if (name === 'system.indexes') {\n    return name;\n  }\n  if (typeof pluralize === 'function') {\n    if (typeof name !== 'string') {\n      throw new TypeError('Collection name must be a string');\n    }\n    if (name.length === 0) {\n      throw new TypeError('Collection name cannot be empty');\n    }\n    return pluralize(name);\n  }\n  return name;\n};\n\n/**\n * Determines if `a` and `b` are deep equal.\n *\n * Modified from node/lib/assert.js\n *\n * @param {any} a a value to compare to `b`\n * @param {any} b a value to compare to `a`\n * @return {Boolean}\n * @api private\n */\n\nexports.deepEqual = function deepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (typeof a !== 'object' || typeof b !== 'object') {\n    return a === b;\n  }\n\n  if (a instanceof Date && b instanceof Date) {\n    return a.getTime() === b.getTime();\n  }\n\n  if ((isBsonType(a, 'ObjectId') && isBsonType(b, 'ObjectId')) ||\n      (isBsonType(a, 'Decimal128') && isBsonType(b, 'Decimal128'))) {\n    return a.toString() === b.toString();\n  }\n\n  if (a instanceof RegExp && b instanceof RegExp) {\n    return a.source === b.source &&\n        a.ignoreCase === b.ignoreCase &&\n        a.multiline === b.multiline &&\n        a.global === b.global &&\n        a.dotAll === b.dotAll &&\n        a.unicode === b.unicode &&\n        a.sticky === b.sticky &&\n        a.hasIndices === b.hasIndices;\n  }\n\n  if (a == null || b == null) {\n    return false;\n  }\n\n  if (a.prototype !== b.prototype) {\n    return false;\n  }\n\n  if (a instanceof Map || b instanceof Map) {\n    if (!(a instanceof Map) || !(b instanceof Map)) {\n      return false;\n    }\n    return deepEqual(Array.from(a.keys()), Array.from(b.keys())) &&\n      deepEqual(Array.from(a.values()), Array.from(b.values()));\n  }\n\n  // Handle MongooseNumbers\n  if (a instanceof Number && b instanceof Number) {\n    return a.valueOf() === b.valueOf();\n  }\n\n  if (Buffer.isBuffer(a)) {\n    return exports.buffer.areEqual(a, b);\n  }\n\n  if (Array.isArray(a) || Array.isArray(b)) {\n    if (!Array.isArray(a) || !Array.isArray(b)) {\n      return false;\n    }\n    const len = a.length;\n    if (len !== b.length) {\n      return false;\n    }\n    for (let i = 0; i < len; ++i) {\n      if (!deepEqual(a[i], b[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  if (a.$__ != null) {\n    a = a._doc;\n  } else if (isMongooseObject(a)) {\n    a = a.toObject();\n  }\n\n  if (b.$__ != null) {\n    b = b._doc;\n  } else if (isMongooseObject(b)) {\n    b = b.toObject();\n  }\n\n  const ka = Object.keys(a);\n  const kb = Object.keys(b);\n  const kaLength = ka.length;\n\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (kaLength !== kb.length) {\n    return false;\n  }\n\n  // ~~~cheap key test\n  for (let i = kaLength - 1; i >= 0; i--) {\n    if (ka[i] !== kb[i]) {\n      return false;\n    }\n  }\n\n  // equivalent values for every corresponding key, and\n  // ~~~possibly expensive deep test\n  for (const key of ka) {\n    if (!deepEqual(a[key], b[key])) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * Get the last element of an array\n * @param {Array} arr\n */\n\nexports.last = function(arr) {\n  if (arr.length > 0) {\n    return arr[arr.length - 1];\n  }\n  return void 0;\n};\n\n/*!\n * ignore\n */\n\nexports.promiseOrCallback = promiseOrCallback;\n\n/*!\n * ignore\n */\n\nexports.cloneArrays = function cloneArrays(arr) {\n  if (!Array.isArray(arr)) {\n    return arr;\n  }\n\n  return arr.map(el => exports.cloneArrays(el));\n};\n\n/*!\n * ignore\n */\n\nexports.omit = function omit(obj, keys) {\n  if (keys == null) {\n    return Object.assign({}, obj);\n  }\n  if (!Array.isArray(keys)) {\n    keys = [keys];\n  }\n\n  const ret = Object.assign({}, obj);\n  for (const key of keys) {\n    delete ret[key];\n  }\n  return ret;\n};\n\n/**\n * Merges `from` into `to` without overwriting existing properties.\n *\n * @param {Object} to\n * @param {Object} from\n * @param {Object} [options]\n * @param {String} [path]\n * @api private\n */\n\nexports.merge = function merge(to, from, options, path) {\n  options = options || {};\n\n  const keys = Object.keys(from);\n  let i = 0;\n  const len = keys.length;\n  let key;\n\n  if (from[trustedSymbol]) {\n    to[trustedSymbol] = from[trustedSymbol];\n  }\n\n  path = path || '';\n  const omitNested = options.omitNested || {};\n\n  while (i < len) {\n    key = keys[i++];\n    if (options.omit && options.omit[key]) {\n      continue;\n    }\n    if (omitNested[path]) {\n      continue;\n    }\n    if (specialProperties.has(key)) {\n      continue;\n    }\n    if (to[key] == null) {\n      if (isPOJO(from[key])) {\n        to[key] = { ...from[key] };\n      } else if (Array.isArray(from[key])) {\n        to[key] = [...from[key]];\n      } else {\n        to[key] = from[key];\n      }\n    } else if (exports.isObject(from[key])) {\n      if (!exports.isObject(to[key])) {\n        to[key] = {};\n      }\n      if (from[key] != null) {\n        // Skip merging schemas if we're creating a discriminator schema and\n        // base schema has a given path as a single nested but discriminator schema\n        // has the path as a document array, or vice versa (gh-9534)\n        if (options.isDiscriminatorSchemaMerge &&\n            (from[key].$isSingleNested && to[key].$isMongooseDocumentArray) ||\n            (from[key].$isMongooseDocumentArray && to[key].$isSingleNested)) {\n          continue;\n        } else if (from[key].instanceOfSchema) {\n          if (to[key].instanceOfSchema) {\n            schemaMerge(to[key], from[key].clone(), options.isDiscriminatorSchemaMerge);\n          } else {\n            to[key] = from[key].clone();\n          }\n          continue;\n        } else if (isBsonType(from[key], 'ObjectId')) {\n          to[key] = new ObjectId(from[key]);\n          continue;\n        }\n      }\n      merge(to[key], from[key], options, path ? path + '.' + key : key);\n    } else if (options.overwrite) {\n      to[key] = from[key];\n    }\n  }\n\n  return to;\n};\n\n/**\n * Applies toObject recursively.\n *\n * @param {Document|Array|Object} obj\n * @return {Object}\n * @api private\n */\n\nexports.toObject = function toObject(obj) {\n  Document || (Document = require('./document'));\n  let ret;\n\n  if (obj == null) {\n    return obj;\n  }\n\n  if (obj instanceof Document) {\n    return obj.toObject();\n  }\n\n  if (Array.isArray(obj)) {\n    ret = [];\n\n    for (const doc of obj) {\n      ret.push(toObject(doc));\n    }\n\n    return ret;\n  }\n\n  if (exports.isPOJO(obj)) {\n    ret = {};\n\n    if (obj[trustedSymbol]) {\n      ret[trustedSymbol] = obj[trustedSymbol];\n    }\n\n    for (const k of Object.keys(obj)) {\n      if (specialProperties.has(k)) {\n        continue;\n      }\n      ret[k] = toObject(obj[k]);\n    }\n\n    return ret;\n  }\n\n  return obj;\n};\n\nexports.isObject = isObject;\n\n/**\n * Determines if `arg` is a plain old JavaScript object (POJO). Specifically,\n * `arg` must be an object but not an instance of any special class, like String,\n * ObjectId, etc.\n *\n * `Object.getPrototypeOf()` is part of ES5: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/getPrototypeOf\n *\n * @param {Object|Array|String|Function|RegExp|any} arg\n * @api private\n * @return {Boolean}\n */\n\nexports.isPOJO = require('./helpers/isPOJO');\n\n/**\n * Determines if `arg` is an object that isn't an instance of a built-in value\n * class, like Array, Buffer, ObjectId, etc.\n * @param {Any} val\n */\n\nexports.isNonBuiltinObject = function isNonBuiltinObject(val) {\n  return typeof val === 'object' &&\n    !exports.isNativeObject(val) &&\n    !exports.isMongooseType(val) &&\n    !(val instanceof UUID) &&\n    val != null;\n};\n\n/**\n * Determines if `obj` is a built-in object like an array, date, boolean,\n * etc.\n * @param {Any} arg\n */\n\nexports.isNativeObject = function(arg) {\n  return Array.isArray(arg) ||\n    arg instanceof Date ||\n    arg instanceof Boolean ||\n    arg instanceof Number ||\n    arg instanceof String;\n};\n\n/**\n * Determines if `val` is an object that has no own keys\n * @param {Any} val\n */\n\nexports.isEmptyObject = function(val) {\n  return val != null &&\n    typeof val === 'object' &&\n    Object.keys(val).length === 0;\n};\n\n/**\n * Search if `obj` or any POJOs nested underneath `obj` has a property named\n * `key`\n * @param {Object} obj\n * @param {String} key\n */\n\nexports.hasKey = function hasKey(obj, key) {\n  const props = Object.keys(obj);\n  for (const prop of props) {\n    if (prop === key) {\n      return true;\n    }\n    if (exports.isPOJO(obj[prop]) && exports.hasKey(obj[prop], key)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * process.nextTick helper.\n *\n * Wraps `callback` in a try/catch + nextTick.\n *\n * node-mongodb-native has a habit of state corruption when an error is immediately thrown from within a collection callback.\n *\n * @param {Function} callback\n * @api private\n */\n\nexports.tick = function tick(callback) {\n  if (typeof callback !== 'function') {\n    return;\n  }\n  return function() {\n    try {\n      callback.apply(this, arguments);\n    } catch (err) {\n      // only nextTick on err to get out of\n      // the event loop and avoid state corruption.\n      immediate(function() {\n        throw err;\n      });\n    }\n  };\n};\n\n/**\n * Returns true if `v` is an object that can be serialized as a primitive in\n * MongoDB\n * @param {Any} v\n */\n\nexports.isMongooseType = function(v) {\n  return isBsonType(v, 'ObjectId') || isBsonType(v, 'Decimal128') || v instanceof Buffer;\n};\n\nexports.isMongooseObject = isMongooseObject;\n\n/**\n * Converts `expires` options of index objects to `expiresAfterSeconds` options for MongoDB.\n *\n * @param {Object} object\n * @api private\n */\n\nexports.expires = function expires(object) {\n  if (!(object && object.constructor.name === 'Object')) {\n    return;\n  }\n  if (!('expires' in object)) {\n    return;\n  }\n\n  object.expireAfterSeconds = (typeof object.expires !== 'string')\n    ? object.expires\n    : Math.round(ms(object.expires) / 1000);\n  delete object.expires;\n};\n\n/**\n * populate helper\n * @param {String} path\n * @param {String} select\n * @param {Model} model\n * @param {Object} match\n * @param {Object} options\n * @param {Any} subPopulate\n * @param {Boolean} justOne\n * @param {Boolean} count\n */\n\nexports.populate = function populate(path, select, model, match, options, subPopulate, justOne, count) {\n  // might have passed an object specifying all arguments\n  let obj = null;\n  if (arguments.length === 1) {\n    if (path instanceof PopulateOptions) {\n      // If reusing old populate docs, avoid reusing `_docs` because that may\n      // lead to bugs and memory leaks. See gh-11641\n      path._docs = {};\n      path._childDocs = [];\n      return [path];\n    }\n\n    if (Array.isArray(path)) {\n      const singles = makeSingles(path);\n      return singles.map(o => exports.populate(o)[0]);\n    }\n\n    if (exports.isObject(path)) {\n      obj = Object.assign({}, path);\n    } else {\n      obj = { path: path };\n    }\n  } else if (typeof model === 'object') {\n    obj = {\n      path: path,\n      select: select,\n      match: model,\n      options: match\n    };\n  } else {\n    obj = {\n      path: path,\n      select: select,\n      model: model,\n      match: match,\n      options: options,\n      populate: subPopulate,\n      justOne: justOne,\n      count: count\n    };\n  }\n\n  if (typeof obj.path !== 'string') {\n    throw new TypeError('utils.populate: invalid path. Expected string. Got typeof `' + typeof path + '`');\n  }\n\n  return _populateObj(obj);\n\n  // The order of select/conditions args is opposite Model.find but\n  // necessary to keep backward compatibility (select could be\n  // an array, string, or object literal).\n  function makeSingles(arr) {\n    const ret = [];\n    arr.forEach(function(obj) {\n      if (oneSpaceRE.test(obj.path)) {\n        const paths = obj.path.split(manySpaceRE);\n        paths.forEach(function(p) {\n          const copy = Object.assign({}, obj);\n          copy.path = p;\n          ret.push(copy);\n        });\n      } else {\n        ret.push(obj);\n      }\n    });\n\n    return ret;\n  }\n};\n\nfunction _populateObj(obj) {\n  if (Array.isArray(obj.populate)) {\n    const ret = [];\n    obj.populate.forEach(function(obj) {\n      if (oneSpaceRE.test(obj.path)) {\n        const copy = Object.assign({}, obj);\n        const paths = copy.path.split(manySpaceRE);\n        paths.forEach(function(p) {\n          copy.path = p;\n          ret.push(exports.populate(copy)[0]);\n        });\n      } else {\n        ret.push(exports.populate(obj)[0]);\n      }\n    });\n    obj.populate = exports.populate(ret);\n  } else if (obj.populate != null && typeof obj.populate === 'object') {\n    obj.populate = exports.populate(obj.populate);\n  }\n\n  const ret = [];\n  const paths = oneSpaceRE.test(obj.path) ? obj.path.split(manySpaceRE) : [obj.path];\n  if (obj.options != null) {\n    obj.options = clone(obj.options);\n  }\n\n  for (const path of paths) {\n    ret.push(new PopulateOptions(Object.assign({}, obj, { path: path })));\n  }\n\n  return ret;\n}\n\n/**\n * Return the value of `obj` at the given `path`.\n *\n * @param {String} path\n * @param {Object} obj\n * @param {Any} map\n */\n\nexports.getValue = function(path, obj, map) {\n  return mpath.get(path, obj, getValueLookup, map);\n};\n\n/*!\n * ignore\n */\n\nconst mapGetterOptions = Object.freeze({ getters: false });\n\nfunction getValueLookup(obj, part) {\n  let _from = obj?._doc || obj;\n  if (_from != null && _from.isMongooseArrayProxy) {\n    _from = _from.__array;\n  }\n  return _from instanceof Map ?\n    _from.get(part, mapGetterOptions) :\n    _from[part];\n}\n\n/**\n * Sets the value of `obj` at the given `path`.\n *\n * @param {String} path\n * @param {Anything} val\n * @param {Object} obj\n * @param {Any} map\n * @param {Any} _copying\n */\n\nexports.setValue = function(path, val, obj, map, _copying) {\n  mpath.set(path, val, obj, '_doc', map, _copying);\n};\n\n/**\n * Returns an array of values from object `o`.\n *\n * @param {Object} o\n * @return {Array}\n * @api private\n */\n\nexports.object = {};\nexports.object.vals = function vals(o) {\n  const keys = Object.keys(o);\n  let i = keys.length;\n  const ret = [];\n\n  while (i--) {\n    ret.push(o[keys[i]]);\n  }\n\n  return ret;\n};\n\nconst hop = Object.prototype.hasOwnProperty;\n\n/**\n * Safer helper for hasOwnProperty checks\n *\n * @param {Object} obj\n * @param {String} prop\n */\n\nexports.object.hasOwnProperty = function(obj, prop) {\n  return hop.call(obj, prop);\n};\n\n/**\n * Determine if `val` is null or undefined\n *\n * @param {Any} val\n * @return {Boolean}\n */\n\nexports.isNullOrUndefined = function(val) {\n  return val === null || val === undefined;\n};\n\n/*!\n * ignore\n */\n\nexports.array = {};\n\n/**\n * Flattens an array.\n *\n * [ 1, [ 2, 3, [4] ]] -> [1,2,3,4]\n *\n * @param {Array} arr\n * @param {Function} [filter] If passed, will be invoked with each item in the array. If `filter` returns a falsy value, the item will not be included in the results.\n * @param {Array} ret\n * @return {Array}\n * @api private\n */\n\nexports.array.flatten = function flatten(arr, filter, ret) {\n  ret || (ret = []);\n\n  arr.forEach(function(item) {\n    if (Array.isArray(item)) {\n      flatten(item, filter, ret);\n    } else {\n      if (!filter || filter(item)) {\n        ret.push(item);\n      }\n    }\n  });\n\n  return ret;\n};\n\n/*!\n * ignore\n */\n\nconst _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nexports.hasUserDefinedProperty = function(obj, key) {\n  if (obj == null) {\n    return false;\n  }\n\n  if (Array.isArray(key)) {\n    for (const k of key) {\n      if (exports.hasUserDefinedProperty(obj, k)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  if (_hasOwnProperty.call(obj, key)) {\n    return true;\n  }\n  if (typeof obj === 'object' && key in obj) {\n    const v = obj[key];\n    return v !== Object.prototype[key] && v !== Array.prototype[key];\n  }\n\n  return false;\n};\n\n/*!\n * ignore\n */\n\nconst MAX_ARRAY_INDEX = Math.pow(2, 32) - 1;\n\nexports.isArrayIndex = function(val) {\n  if (typeof val === 'number') {\n    return val >= 0 && val <= MAX_ARRAY_INDEX;\n  }\n  if (typeof val === 'string') {\n    if (!/^\\d+$/.test(val)) {\n      return false;\n    }\n    val = +val;\n    return val >= 0 && val <= MAX_ARRAY_INDEX;\n  }\n\n  return false;\n};\n\n/**\n * Removes duplicate values from an array\n *\n * [1, 2, 3, 3, 5] => [1, 2, 3, 5]\n * [ ObjectId(\"550988ba0c19d57f697dc45e\"), ObjectId(\"550988ba0c19d57f697dc45e\") ]\n *    => [ObjectId(\"550988ba0c19d57f697dc45e\")]\n *\n * @param {Array} arr\n * @return {Array}\n * @api private\n */\n\nexports.array.unique = function(arr) {\n  const primitives = new Set();\n  const ids = new Set();\n  const ret = [];\n\n  for (const item of arr) {\n    if (typeof item === 'number' || typeof item === 'string' || item == null) {\n      if (primitives.has(item)) {\n        continue;\n      }\n      ret.push(item);\n      primitives.add(item);\n    } else if (isBsonType(item, 'ObjectId')) {\n      if (ids.has(item.toString())) {\n        continue;\n      }\n      ret.push(item);\n      ids.add(item.toString());\n    } else {\n      ret.push(item);\n    }\n  }\n\n  return ret;\n};\n\nexports.buffer = {};\n\n/**\n * Determines if two buffers are equal.\n *\n * @param {Buffer} a\n * @param {Object} b\n */\n\nexports.buffer.areEqual = function(a, b) {\n  if (!Buffer.isBuffer(a)) {\n    return false;\n  }\n  if (!Buffer.isBuffer(b)) {\n    return false;\n  }\n  if (a.length !== b.length) {\n    return false;\n  }\n  for (let i = 0, len = a.length; i < len; ++i) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n  return true;\n};\n\nexports.getFunctionName = getFunctionName;\n\n/**\n * Decorate buffers\n * @param {Object} destination\n * @param {Object} source\n */\n\nexports.decorate = function(destination, source) {\n  for (const key in source) {\n    if (specialProperties.has(key)) {\n      continue;\n    }\n    destination[key] = source[key];\n  }\n};\n\n/**\n * merges to with a copy of from\n *\n * @param {Object} to\n * @param {Object} fromObj\n * @api private\n */\n\nexports.mergeClone = function(to, fromObj) {\n  if (isMongooseObject(fromObj)) {\n    fromObj = fromObj.toObject({\n      transform: false,\n      virtuals: false,\n      depopulate: true,\n      getters: false,\n      flattenDecimals: false\n    });\n  }\n  const keys = Object.keys(fromObj);\n  const len = keys.length;\n  let i = 0;\n  let key;\n\n  while (i < len) {\n    key = keys[i++];\n    if (specialProperties.has(key)) {\n      continue;\n    }\n    if (typeof to[key] === 'undefined') {\n      to[key] = clone(fromObj[key], {\n        transform: false,\n        virtuals: false,\n        depopulate: true,\n        getters: false,\n        flattenDecimals: false\n      });\n    } else {\n      let val = fromObj[key];\n      if (val != null && val.valueOf && !(val instanceof Date)) {\n        val = val.valueOf();\n      }\n      if (exports.isObject(val)) {\n        let obj = val;\n        if (isMongooseObject(val) && !val.isMongooseBuffer) {\n          obj = obj.toObject({\n            transform: false,\n            virtuals: false,\n            depopulate: true,\n            getters: false,\n            flattenDecimals: false\n          });\n        }\n        if (val.isMongooseBuffer) {\n          obj = Buffer.from(obj);\n        }\n        exports.mergeClone(to[key], obj);\n      } else {\n        to[key] = clone(val, {\n          flattenDecimals: false\n        });\n      }\n    }\n  }\n};\n\n/**\n * Executes a function on each element of an array (like _.each)\n *\n * @param {Array} arr\n * @param {Function} fn\n * @api private\n */\n\nexports.each = function(arr, fn) {\n  for (const item of arr) {\n    fn(item);\n  }\n};\n\n/**\n * Rename an object key, while preserving its position in the object\n *\n * @param {Object} oldObj\n * @param {String|Number} oldKey\n * @param {String|Number} newKey\n * @api private\n */\nexports.renameObjKey = function(oldObj, oldKey, newKey) {\n  const keys = Object.keys(oldObj);\n  return keys.reduce(\n    (acc, val) => {\n      if (val === oldKey) {\n        acc[newKey] = oldObj[oldKey];\n      } else {\n        acc[val] = oldObj[val];\n      }\n      return acc;\n    },\n    {}\n  );\n};\n\n/*!\n * ignore\n */\n\nexports.getOption = function(name) {\n  const sources = Array.prototype.slice.call(arguments, 1);\n\n  for (const source of sources) {\n    if (source == null) {\n      continue;\n    }\n    if (source[name] != null) {\n      return source[name];\n    }\n  }\n\n  return null;\n};\n\n/*!\n * ignore\n */\n\nexports.noop = function() {};\n\nexports.errorToPOJO = function errorToPOJO(error) {\n  const isError = error instanceof Error;\n  if (!isError) {\n    throw new Error('`error` must be `instanceof Error`.');\n  }\n\n  const ret = {};\n  for (const properyName of Object.getOwnPropertyNames(error)) {\n    ret[properyName] = error[properyName];\n  }\n  return ret;\n};\n\n/*!\n * ignore\n */\n\nexports.warn = function warn(message) {\n  return process.emitWarning(message, { code: 'MONGOOSE' });\n};\n\n\nexports.injectTimestampsOption = function injectTimestampsOption(writeOperation, timestampsOption) {\n  if (timestampsOption == null) {\n    return;\n  }\n  writeOperation.timestamps = timestampsOption;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}