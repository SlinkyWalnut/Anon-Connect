{"ast":null,"code":"/*!\n * Module dependencies.\n */\n\n'use strict';\n\nconst MongooseError = require('./mongooseError');\n\n/**\n * If the underwriting `bulkWrite()` for `bulkSave()` succeeded, but wasn't able to update or\n * insert all documents, we throw this error.\n *\n * @api private\n */\n\nclass MongooseBulkSaveIncompleteError extends MongooseError {\n  constructor(modelName, documents, bulkWriteResult) {\n    const matchedCount = bulkWriteResult?.matchedCount ?? 0;\n    const insertedCount = bulkWriteResult?.insertedCount ?? 0;\n    let preview = documents.map(doc => doc._id).join(', ');\n    if (preview.length > 100) {\n      preview = preview.slice(0, 100) + '...';\n    }\n    const numDocumentsNotUpdated = documents.length - matchedCount - insertedCount;\n    super(`${modelName}.bulkSave() was not able to update ${numDocumentsNotUpdated} of the given documents due to incorrect version or optimistic concurrency, document ids: ${preview}`);\n    this.modelName = modelName;\n    this.documents = documents;\n    this.bulkWriteResult = bulkWriteResult;\n    this.numDocumentsNotUpdated = numDocumentsNotUpdated;\n  }\n}\nObject.defineProperty(MongooseBulkSaveIncompleteError.prototype, 'name', {\n  value: 'MongooseBulkSaveIncompleteError'\n});\n\n/*!\n * exports\n */\n\nmodule.exports = MongooseBulkSaveIncompleteError;","map":{"version":3,"names":["MongooseError","require","MongooseBulkSaveIncompleteError","constructor","modelName","documents","bulkWriteResult","matchedCount","insertedCount","preview","map","doc","_id","join","length","slice","numDocumentsNotUpdated","Object","defineProperty","prototype","value","module","exports"],"sources":["C:/Users/wliu6/OneDrive/Desktop/Web Development/we-detox/Anon-Connect/anon-connect/node_modules/mongoose/lib/error/bulkSaveIncompleteError.js"],"sourcesContent":["/*!\n * Module dependencies.\n */\n\n'use strict';\n\nconst MongooseError = require('./mongooseError');\n\n\n/**\n * If the underwriting `bulkWrite()` for `bulkSave()` succeeded, but wasn't able to update or\n * insert all documents, we throw this error.\n *\n * @api private\n */\n\nclass MongooseBulkSaveIncompleteError extends MongooseError {\n  constructor(modelName, documents, bulkWriteResult) {\n    const matchedCount = bulkWriteResult?.matchedCount ?? 0;\n    const insertedCount = bulkWriteResult?.insertedCount ?? 0;\n    let preview = documents.map(doc => doc._id).join(', ');\n    if (preview.length > 100) {\n      preview = preview.slice(0, 100) + '...';\n    }\n\n    const numDocumentsNotUpdated = documents.length - matchedCount - insertedCount;\n    super(`${modelName}.bulkSave() was not able to update ${numDocumentsNotUpdated} of the given documents due to incorrect version or optimistic concurrency, document ids: ${preview}`);\n\n    this.modelName = modelName;\n    this.documents = documents;\n    this.bulkWriteResult = bulkWriteResult;\n    this.numDocumentsNotUpdated = numDocumentsNotUpdated;\n  }\n}\n\nObject.defineProperty(MongooseBulkSaveIncompleteError.prototype, 'name', {\n  value: 'MongooseBulkSaveIncompleteError'\n});\n\n/*!\n * exports\n */\n\nmodule.exports = MongooseBulkSaveIncompleteError;\n"],"mappings":"AAAA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAMA,aAAa,GAAGC,OAAO,CAAC,iBAAiB,CAAC;;AAGhD;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,+BAA+B,SAASF,aAAa,CAAC;EAC1DG,WAAWA,CAACC,SAAS,EAAEC,SAAS,EAAEC,eAAe,EAAE;IACjD,MAAMC,YAAY,GAAGD,eAAe,EAAEC,YAAY,IAAI,CAAC;IACvD,MAAMC,aAAa,GAAGF,eAAe,EAAEE,aAAa,IAAI,CAAC;IACzD,IAAIC,OAAO,GAAGJ,SAAS,CAACK,GAAG,CAACC,GAAG,IAAIA,GAAG,CAACC,GAAG,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC;IACtD,IAAIJ,OAAO,CAACK,MAAM,GAAG,GAAG,EAAE;MACxBL,OAAO,GAAGA,OAAO,CAACM,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC,GAAG,KAAK;IACzC;IAEA,MAAMC,sBAAsB,GAAGX,SAAS,CAACS,MAAM,GAAGP,YAAY,GAAGC,aAAa;IAC9E,KAAK,CAAC,GAAGJ,SAAS,sCAAsCY,sBAAsB,6FAA6FP,OAAO,EAAE,CAAC;IAErL,IAAI,CAACL,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAACC,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAACC,eAAe,GAAGA,eAAe;IACtC,IAAI,CAACU,sBAAsB,GAAGA,sBAAsB;EACtD;AACF;AAEAC,MAAM,CAACC,cAAc,CAAChB,+BAA+B,CAACiB,SAAS,EAAE,MAAM,EAAE;EACvEC,KAAK,EAAE;AACT,CAAC,CAAC;;AAEF;AACA;AACA;;AAEAC,MAAM,CAACC,OAAO,GAAGpB,+BAA+B","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}